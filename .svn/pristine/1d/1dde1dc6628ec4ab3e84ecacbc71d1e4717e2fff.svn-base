(function(window, $){
var win = $(window);
var doc = $(document);
var commonJs = {};
this.commonJs = commonJs;

//orientation check

doc.on('ready', function(){

})

win.on('load' , function(){
    console.log('-------script bind-------');
    
    eventBinding.bind();
})


var eventBinding = {
    bind: function(){
        commonJs.initTabToggle($('.tabTog.tabScript'));
        commonJs.initActiveInput($('.activeInput'));
        commonJs.initSorting($('.sorting'));
        commonJs.initAccordion($('.acc'));
    }
}

//공통 아코디언
commonJs.initAccordion = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var tit = itm.find('.accTit');
        var li = itm.children('li');

        
        if(!li.length){
            li = itm;
        }
        
        li.css({
            'overflow' : 'hidden'
        })
        itm.find('.accCon').css({
            'visibility' : 'visible'
        })
        
        tit.find('button').on('click', function(){
            
            $('.acc .accTit button').attr('aria-selected', false);

            var t = $(this);
            var openLi = t.closest('li');
            var liTit = t.closest('.accTit');
            var isOpen = liTit.hasClass('on');
            var liCon = liTit.siblings('.accCon');
            var liHeight = liTit.outerHeight() + liCon.outerHeight();
            var openedLi = li.find('.accTit.on').closest('li');
            var closeHeight = li.find('.accTit.on').outerHeight();
            if(!openLi.length){
                openLi = itm;
            }
            if(isOpen){
                openedLi = openLi;
            }

            //opened list close
            openedLi.stop().animate({
                'height': closeHeight,
            }, {
                duration: 250,
                ease: 'easeOutExpo',
                complete: function() {
                    openedLi.find('.accTit').removeClass('on');
                    openedLi.find('.accTit button').attr('aria-expanded', false);
                }
            })
            
            if(isOpen){
                return;
            }
            
            openLi.stop().animate({
                'height' : liHeight
            },{
              duration:250,
              ease: 'easeOutExpo',
              complete: function(){
                liTit.addClass('on');
                t.attr('aria-selected', true);
                t.attr('aria-expanded', true);
              }  
            })
            
        })
    })
}

//공통 가운데정렬 셀렉박스 
commonJs.initSorting = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var lab = itm.find('label');

        itm.find('select').change(function(){
            var selectedName = $(this).children('option:selected').text();
            lab.text(selectedName);
        })
    })
}

//공통 액티브인풋
commonJs.initActiveInput = function(el){
    if(!el.length){
        return;
    }

    el.each(function(idx, i){
        var itm = $(i);
        var input = itm.find('input');

        itm.find('label').css(cssScript.actionInput);
    
        itm.find('input').focus(function() {
            $(this).parent('.activeInput').addClass('action');
        });
        
        // input 삭제 클릭시
        itm.find('button').click(function() {
            event.stopPropagation();
            input.attr('value', '').val('');
            input.focus();
            itm.addClass("action");
        });
        
        // input 빠져 나올시
        itm.find('input').focusout(function() {
            if($(this).val().length < 1){
                itm.removeClass("action");
            }		
        });
    })
}

//공통 토글탭
commonJs.initTabToggle = function(el){
    if(!el.length){
        return;
    }

    el.each(function(idx, i){
        var itm= $(i);
        
        var contList =[];
        itm.nextUntil('.tabTog.tabScript').each(function(){
            if($(this).hasClass('tabcon')){
                contList.push($(this));
            }
        })
        var selected;

        itm.find('ul>li>a').each(function(){
            if($(this).attr('aria-selected') == 'true'){
                selected = $('#'+$(this).attr('aria-controls'));
            }
        })
        hide(contList);
        selected.show();
        
        itm.find('ul>li').on('click', function(){
            var t = $(this);
            
            t.siblings('li').find('a').attr('aria-selected' , false);
            t.find('a').attr('aria-selected' , true);
            
            hide(contList);
            $('#'+t.find('a').attr('aria-controls')).show();
        })
    
    })

    function hide(list){
        for(i in list){
            list[i].hide();
        }
    }
}

var cssScript = {
    actionInput: {
        'transition': 'all 0.5s',
        '-webkit-transition': 'all 0.5s',
        '-moz-transition': 'all 0.5s',
        '-ms-transition': 'all 0.5s',
        '-o-transition': 'all 0.5s',
    },
}

})(window, jQuery)