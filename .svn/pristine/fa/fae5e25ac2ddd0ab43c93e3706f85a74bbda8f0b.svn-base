var commonJs = {};
this.commonJs = commonJs;
var winSt = 0;
const ANIMATION_EASING = 'easeOutExpo';

/**
 * 트랜지션 css
 */
var cssScript = {
    actionInput: {
        'transition': 'all 0.5s',
        '-webkit-transition': 'all 0.5s',
        '-moz-transition': 'all 0.5s',
        '-ms-transition': 'all 0.5s',
        '-o-transition': 'all 0.5s',
    },
}


$(document).on('ready', function(){
    console.log('-------script bind-------');
    eventBinding.bind();
    
})

$(window).on('load' , function(){

    commonJs.initPriceNumArea($('.btnFixed.showBtn'));
    commonJs.initEventFlyer($('.eventFlyer'));
    commonJs.initSwiper($('.swipeArea'));
    commonJs.initActiveInput($('.activeInput'));
    commonJs.initTabToggle($('.tabTog.tabScript'));
    commonJs.initAccordion($('.acc'));
    commonJs.initSearchBar($('.srch'));

})

var eventBinding = {
    /**
     * 동적으로 노드가 append되는 경우의 위임이벤트
     */
    bind: function(){
        commonJs.initActiveRadio('.storeSelect li>.checkForm>label');
        commonJs.initBtnSelect('.prRist li>button');
        commonJs.initOneBtnSelect('.categoryTab li>a');
        commonJs.initExpendedToggle('.rsvList li>.rsvStore');
        commonJs.initSorting('.sorting select');
        commonJs.initArlimMoreBtn('.arlimList .more');
        commonJs.initSetMoreBtn('.moreArea','.moreCon','.more');
    }
}


/** *******************************************************
 * 
 * 이벤트 위임 스크립트
 * 
 *  ********************************************************/

/**
 * 공통 fixed버튼 활성화 라디오버튼 
 * gsf-029.html 최근 배송지목록 라디오버튼 적용
 */
commonJs.initActiveRadio = function(node){
    $(document).on('click',node, function(evt){
        $('.btnFixed button.btnTP').attr('disabled', false);
    })
}

/**
 * 공통 button태그 aria-selected show
 * gsf-027.html 장바구니버튼 적용
 */
commonJs.initBtnSelect =function(node){
    $(document).on('click' , node, function(evt){
        evt.preventDefault();
        $(node).removeAttr('title');
        if($(this).hasClass('on')){
            $(this).removeClass('on').removeAttr('class');       
        }else{
            $(this).addClass('on').attr('title','주문선택');
        }
    })
}

/**
 * one aria-selected element show/hide
 * com-502.html
 */
commonJs.initOneBtnSelect =function(node){
    $(document).on('click' , node, function(evt){
        evt.preventDefault();
        $(node).attr('aria-selected', false);
        $(this).attr('aria-selected' , true);
    })
}

/**
 * 예약상품 리스트
 * gsf-013.html
 */
commonJs.initExpendedToggle = function(node){
    $(document).on('click' , node , function(evt){
        var t = $(this);
        var flag = false;
        
        if(t.attr('aria-expanded')=='false'){
            flag = true;
        }else{
            flag = false;
        }
        t.attr('aria-expanded', flag);
        
    })
}

/**
 * 공통 가운데정렬 셀렉박스
 */
commonJs.initSorting = function(node){
    $(document).on('change', node , function(evt){
        var selectedName = $(this).children('option:selected').text();
        $(this).next('label').text(selectedName);
    })

}

/**
 * 알림리스트 더보기 버튼
 * uti-001.html
 */
commonJs.initArlimMoreBtn = function(node){
    $(document).on('click', node, function(evt){
        $(this).closest('.arlimCon').addClass('txtAll');
    })
}

/**
 * 설정페이지 이벤트알림 더보기 버튼
 * UTI-008.html
 */
commonJs.initSetMoreBtn = function(parent, con, btn){
    if(!$(parent).find(con).length){
        return;
    }

     //open button
    $(document).on('click', parent+'>'+btn, function(evt){
        var _this = $(this);
        var container = _this.closest(parent);

        _this.attr('aria-expanded' , true);
        _this.closest(parent).addClass('on');
        container.css({
            'display' : 'block',
            'overflow' : 'hidden',
        });
        
        var h = container.outerHeight();

        container.css({
            'height' : _this.outerHeight()
        }).stop().animate({
            'height': h,
        },{
            duration: 250,
            ease: ANIMATION_EASING,
            complete: function() {
            }
        })
    })
    
    //close button
    $(document).on('click', con+' '+btn, function(evt){
        var _this = $(this);
        var container = _this.closest(parent);
        var moreArea = _this.closest(parent);
        
        container.stop().animate({
            'height': _this.outerHeight(),
        },{
            duration: 250,
            ease: ANIMATION_EASING,
            complete: function() {
                container.removeAttr('style');
                moreArea.removeClass('on');
                moreArea.children(btn).attr('aria-expanded' , false);
            }
        })
    })
    
}


/*********************************************************
 * 
 * 호출 스크립트
 * 
 ********************************************************/


/**
 * 레이어 팝업 show시 부모화면 스크롤 prevent
 */
commonJs.preventBodyScroll = function(callback){
    $('body').css({
        'overflow-y': 'hidden',
        'position': 'fixed'
    })

    if(callback != undefined){
        callback();
    }
}

/**
 * 레이어 팝업 hide시 부모화면 스크롤 allow
 */
commonJs.allowBodyScroll = function(callback){
    $('body').css({
        'overflow-y': '',
        'position': ''
    })

    if(callback != undefined){
        callback();
    }
}

/**
 * 사전예약상세 - 예약하기 버튼 선택시 수량선택 엘리먼트
 * gsf-011.html
 */
commonJs.initPriceNumArea = function(el){

    el.each(function(idx, i){
        var itm = $(i);
        var btn = itm.prev('.btnFixed').find('button.btnTP');
        var prTotal = itm.find('.prTotal');
        var ptH = prTotal.outerHeight();
        
        btn.off('click').on('click', function(){
            itm.show();
            act();
        })

        function act(){
            prTotal.css({
                'position' : 'relative',
                'top' : ptH
            })

            prTotal.stop().animate({
                'top' : 0
            },{
                duration: 200,
                ease: ANIMATION_EASING,
                complete: function(){
                    prTotal.removeAttr('style');
                }
            })
        }
    })
}

/** 
 * swiper getter
 * https://swiperjs.com/  참고
 * ex) commonJs.getSwiper($('.swipeArea'));
 */
commonJs.getSwiper = function(el){
    return el.data('swiper');
}

/** 
 * 행사전단 - 행사전단지 몰아보기 버튼 선택
 * gsf-001.html 
 * */
commonJs.initEventFlyer = function(el){
    var win = $(window);
    var body = $('body');
    el.each(function(idx, i){
        var itm = $(i);
        var flyBtn = itm.find('.flyerMore');
        var flyView = itm.find('.flyerView');
        var btnH = flyBtn.outerHeight();
        var viewH = flyView.outerHeight();
        var dim = el.find('.dimmed');
        var open, option;

        viewH = flyView.css({
            'display' : 'block',
            'visibility' : 'hidden'
        }).outerHeight();

        flyView.removeAttr('style');
        
        flyBtn.off('click').on('click', function(){
            flyView.css('display', 'block');
            open = (itm.hasClass('open'))?true:false;
            
            if(open){
                //close
                option = btnH;
                
            }else{
                //open
                dim.show();
                itm.css('height', btnH);
                option = viewH+btnH;
            }
            
            itm.stop().animate({
                'height': option,
            }, {
                duration: 300,
                ease: ANIMATION_EASING,
                step: function(){
                    itm.css('overflow','');
                },
                complete: function() {
                    if(!open){
                        itm.addClass('open');
                        winSt = win.scrollTop();
                        body.css({
                            width:'100%',
                            marginTop:-winSt
                        });
                        commonJs.preventBodyScroll();
                    }else{
                        dim.hide();
                        itm.removeAttr('style');
                        itm.removeClass('open');
                        body.css({
                            width:'',
                            marginTop:''
                        });
                        commonJs.allowBodyScroll(function(){
                            win.scrollTop(winSt);
                        });
                    }
                    flyView.css('display', '');
                    flyBtn.attr('aria-expanded', !open);
                }
            }) 
        });
    })
}

/**
 * swiper 적용
 * gsf-001.html 
 * uti-004.html
 * 
*/
commonJs.initSwiper = function(el){
    
    el.each(function(idx, i){
        var itm = $(i);       
        var container = itm.find('.swipeCont');
        var btnAuto = itm.find('.btnCtrl.stop');
        var isAutoplay = false, isLoop = false; 
        var visible = true;
        var view, allSlide = null;

        //if display none 
        if(!container.is(':visible')){
            visible = false;
            view = container.closest('.flyerView');
            view.css('display' , 'block');
        }

        var wrapper = itm.find('.swiper');
        var slide = itm.find('.swiper> li');   
        var margin = (slide.css('margin-right')!=undefined)?parseInt(slide.css('margin-right')):0;
        var speed= 400;
        var indicatorBtn = itm.find('.indicator>button');
        wrapper.addClass('swiper-wrapper');
        slide.addClass('swiper-slide');

    
        //if autoplay
        if(btnAuto.length){
            isAutoplay = {
                delay: 3000,
                // disableOnInteraction: false
            };
            isLoop = true;

        }

        
        var swiper = new Swiper(container, {
            mode: 'horizontal',
            speed: speed,
            spaceBetween: margin,
            autoplay:isAutoplay,
            runCallbacksOnInit: false,
            loop: isLoop,
            on: {
                init: function(){
                    if(!visible){
                        view.removeAttr('style');
                    }

                    allSlide= itm.find('.swiper> li');

                    allSlide.attr('aria-hidden', true);
                    
                    slide.eq(this.realIndex).attr('aria-hidden', false);

                     //indicator
                    indicatorBtn.off('click').on('click', function(){
                        var idx = indicatorBtn.index($(this));
                        if(isLoop){
                            swiper.slideToLoop(idx, speed, false);
                            autoPlayState(false);
                        }else{
                            swiper.slideTo(idx, speed, false);    
                        }
                    })

                    //button stop/play
                    btnAuto.off('click').on('click', function(){
                        autoPlayState($(this).hasClass('play'));
                    })
                    
                },
                transitionStart: function(){
                    var idx = this.realIndex;
                    indicatorBtn.eq(idx).attr('aria-selected', true).siblings('button').attr('aria-selected', false);
                    
                    if(allSlide!=null){
                        allSlide.attr('aria-hidden', true);
                    }
                    slide.eq(idx).attr('aria-hidden', false);
                    
                },
                touchStart: function(){
                    if(isLoop){
                        autoPlayState(false);
                    }
                }
            }
        });

        function autoPlayState(state){
            if(swiper== undefined){
                return;
            }
            
            if(state){
                //play상태 
                btnAuto.text('정지').removeClass('play').addClass('stop');
                swiper.autoplay.start();
                
            }else{
                //stop상태 
                btnAuto.text('재생').removeClass('stop').addClass('play');
                swiper.autoplay.stop();
            }
        }

        itm.data('swiper', swiper);
    })
}


/**
 * 공통 아코디언
 * 가이드 참조
 */
commonJs.initAccordion = function(el){
    //acc
    el.each(function(idx, i){
        var itm = $(i);
        var tit = itm.find('.accTit');
        var li = itm.children('li');

        //along type 
        if(!li.length){
            li = itm;
        }
        
        li.css({
            'overflow' : 'hidden'
        })
        itm.find('.accCon').css({
            'visibility' : 'visible'
        })
        
        tit.find('button').off('click').on('click', function(){
            
            $('.acc .accTit button').attr('aria-selected', false);

            var t = $(this);
            var openLi = t.closest('li');
            var liTit = t.closest('.accTit');
            var isOpen = liTit.hasClass('on');
            var liCon = liTit.siblings('.accCon');
            var liHeight = liTit.outerHeight() + liCon.outerHeight();
            var openedLi = li.find('.accTit.on').closest('li');
            var closeHeight = li.find('.accTit.on').outerHeight();
            if(!openLi.length){
                openLi = itm;
            }
            if(isOpen){
                openedLi = openLi;
            }

            //opened list close
            openedLi.stop().animate({
                'height': closeHeight,
            }, {
                duration: 250,
                ease: ANIMATION_EASING,
                complete: function() {
                    openedLi.find('.accTit').removeClass('on');
                    openedLi.find('.accTit button').attr('aria-expanded', false);
                }
            })
            
            if(isOpen){
                return;
            }
            
            openLi.stop().animate({
                'height' : liHeight
            },{
              duration:250,
              ease: ANIMATION_EASING,
              complete: function(){
                liTit.addClass('on');
                t.attr('aria-selected', true);
                t.attr('aria-expanded', true);
              }  
            })
            
        })
    })
}



/**
 * 공통 액티브인풋
 * 가이드 참조
 */
commonJs.initActiveInput = function(el){
    if(!el.length){
        return;
    }

    el.find('label').css(cssScript.actionInput);
    el.each(function(idx, i){
        var itm = $(i);
        var input = itm.find('input');

        itm.find('input').focus(function() {
            $(this).parent('.activeInput').addClass('action');
        });
        
        // input 삭제 클릭시
        itm.find('button').click(function() {
            event.stopPropagation();
            input.attr('value', '').val('');
            input.focus();
            itm.addClass("action");

            //자동완성input일 경우. (commonJs.initSearchBar)
            input.trigger('keyup');
            
        });
        
        // input 빠져 나올시
        itm.find('input').focusout(function() {
            if($(this).val().length < 1){
                itm.removeClass("action");
            }		
        });
    })
}


/**
 * 공통 토글탭
 * .tabScript 클래스가 붙어있어야만 스크립트 동작
 */
commonJs.initTabToggle = function(el){
    if(!el.length){
        return;
    }

    el.each(function(idx, i){
        var itm= $(i);
        var contList =[];
        var selected;

        itm.nextUntil('.tabTog.tabScript').each(function(){
            if($(this).hasClass('tabcon')){
                contList.push($(this));
            }
        })

        itm.find('ul>li>a').each(function(){
            if($(this).attr('aria-selected') == 'true'){
                selected = $('#'+$(this).attr('aria-controls'));
            }
        })
        
        hide(contList);
        selected.show();
        
        itm.find('ul>li').off('click').on('click', function(){
            var t = $(this);
            
            t.siblings('li').find('a').attr('aria-selected' , false);
            t.find('a').attr('aria-selected' , true);
            
            hide(contList);
            $('#'+t.find('a').attr('aria-controls')).show();
        })
    
    })

    function hide(list){
        for(i in list){
            list[i].hide();
        }
    }
}


/**
 * 검색창 검색어 입력시 검색키워드리스트 보이기
 */
commonJs.initSearchBar = function(el){
    var autoCom = $('.autoCom');
    el.each(function(idx, i){
        var itm = $(i);
        var input = itm.find('input');
        var delBtn = itm.find('.delete');

        input.off('keyup').on('keyup', function(evt){
            if(!input.val().length){
                autoCom.hide();
                commonJs.allowBodyScroll();
                return;
            }
            autoCom.show();
            commonJs.preventBodyScroll();
        })
    })
}
