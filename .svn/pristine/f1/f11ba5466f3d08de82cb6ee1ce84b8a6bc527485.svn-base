(function(window, $){

var win = $(window);
var doc = $(document);
var commonJs = {};
this.commonJs = commonJs;
var screenOrientation = 0;
var resizeTimer = null;

doc.on('ready', function(){
    getScreenOrientation();
})

win.on('resize', function(){
    return;
    clearTimeout(resizeTimer);

    resizeTimer = setTimeout(function(){
        if(getScreenOrientation()){
            eventBinding.unbind();
        }
    })
})

win.on('load' , function(){
    console.log('-------script bind-------');
    
    eventBinding.bind();
})

/**  orientation check */
function getScreenOrientation() {
    var orientation = window.outerWidth > window.outerHeight ? 90 : 0;
    if (screenOrientation != orientation) {
        screenOrientation = orientation;
        return true;
    } else {
        return false;
    }
}


var eventBinding = {
    bind: function(){
        commonJs.initTabToggle($('.tabTog.tabScript'));
        commonJs.initActiveInput($('.activeInput'));
        commonJs.initSorting($('.sorting'));
        commonJs.initAccordion($('.acc'));
        commonJs.initBtnSelectToggle($('.prRist'));
        commonJs.initExpendedToggle($('.rsvList'));
        commonJs.initActiveRadio($('.storeSelect'));
        commonJs.initEventFlyer($('.eventFlyer'));
        commonJs.initSwiper($('.swipeArea'));
    }
}

/** swiper getter */
commonJs.getSwiper = function(el){
    return el.data('swiper');
}

/** gsf-001.html 전단지 몰아보기 */
commonJs.initEventFlyer = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var flyBtn = itm.find('.flyerMore');
        var flyView = itm.find('.flyerView');
        var btnH = flyBtn.outerHeight();
        var viewH = flyView.outerHeight();
        var dim = el.find('.dimmed');
        var open, option;

        viewH = flyView.css({
            'display' : 'block',
            'visibility' : 'hidden'
        }).outerHeight();

        flyView.removeAttr('style');
        
        flyBtn.on('click', function(){
            flyView.css('display', 'block');
            open = (itm.hasClass('open'))?true:false;
            
            if(open){
                //close
                option = btnH;
                
            }else{
                //open
                dim.show();
                itm.css('height', btnH);
                option = viewH+btnH;
            }
            
            itm.stop().animate({
                'height': option,
            }, {
                duration: 300,
                ease: 'easeOutExpo',
                step: function(){
                    itm.css('overflow','');
                },
                complete: function() {
                    if(!open){
                        itm.addClass('open');
                    }else{
                        dim.hide();
                        itm.removeAttr('style');
                        itm.removeClass('open');
                    }
                    flyView.css('display', '');
                    flyBtn.attr('aria-expanded', !open);
                }
            })
            
        });
    })
}

/** swiper 
 * gsf-001.html
 * 
*/
commonJs.initSwiper = function(el){
    
    el.each(function(idx, i){
        var itm = $(i);       
        var container = itm.find('.swipeCont');
        var visible = true;
        var view; 

        //if display none 
        if(!container.is(':visible')){
            visible = false;
            view = container.closest('.flyerView');
            view.css('display' , 'block');
        }

        var wrapper = itm.find('.swiper');
        var slide = itm.find('.swiper> li');   
        var margin = (slide.css('margin-right')!=undefined)?parseInt(slide.css('margin-right')):0;
        var speed= 400;
        var indicatorBtn = itm.find('.indicator>button');
        wrapper.addClass('swiper-wrapper');
        slide.addClass('swiper-slide');

        var swiper = new Swiper(container, {
            mode: 'horizontal',
            speed: speed,
            spaceBetween: margin,
            loop: false,
            on: {
                init: function(){
                    if(!visible){
                        view.removeAttr('style');
                    }

                    indicatorBtn.on('click', function(){
                        var idx = indicatorBtn.index($(this));
                        swiper.slideTo(idx, speed, false);                        
                    })
                },
                transitionStart: function(){
                    var idx = this.activeIndex;
                    indicatorBtn.eq(idx).attr('aria-selected', true).siblings('button').attr('aria-selected', false);
                }
            }
        });

        itm.data('swiper', swiper);
    })
    
}

/* 공통 fixed버튼 활성화 라디오버튼 
    gsfresh gsf-029.html 
*/
commonJs.initActiveRadio = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var activatedBtn = $('.btnFixed button.btnTP');
        itm.find('li .checkForm').on('click', function(){
            activatedBtn.attr('disabled', false);
        })
    })
}


/*
    공통 진행사항 a태그 aria-selected 토글
    gsfresh gsf-013.html 삭제
            gsf-039.html 삭제 
*/
commonJs.initASelectToggle = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var allStep = itm.find('li>a');
        allStep.on('click', function(){
            
            allStep.attr('aria-selected', false);
            var t = $(this);
            t.attr('aria-selected', true);
        })
    })
}

/*
   button태그 aria-selected
   gsfresh gsf-027.html
*/
commonJs.initBtnSelectToggle =function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var allBtn = itm.find('li>button');
        allBtn.on('click', function(){
            allBtn.attr('aria-selected', false);
            var t = $(this);
            t.attr('aria-selected' , true);
        })

    })   
}

//예약상품 리스트 (gsf-013.html)
commonJs.initExpendedToggle = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var btn = itm.find('li>.rsvStore');
        btn.on('click', function(){
            var t = $(this);
            var flag = false;
            
            if(t.attr('aria-expanded')=='false'){
                flag = true;
            }else{
                flag = false;
            }
            // btn.attr('aria-expanded', false);
            t.attr('aria-expanded', flag);
        })

    })
}

//공통 아코디언
commonJs.initAccordion = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var tit = itm.find('.accTit');
        var li = itm.children('li');

        
        if(!li.length){
            li = itm;
        }
        
        li.css({
            'overflow' : 'hidden'
        })
        itm.find('.accCon').css({
            'visibility' : 'visible'
        })
        
        tit.find('button').on('click', function(){
            
            $('.acc .accTit button').attr('aria-selected', false);

            var t = $(this);
            var openLi = t.closest('li');
            var liTit = t.closest('.accTit');
            var isOpen = liTit.hasClass('on');
            var liCon = liTit.siblings('.accCon');
            var liHeight = liTit.outerHeight() + liCon.outerHeight();
            var openedLi = li.find('.accTit.on').closest('li');
            var closeHeight = li.find('.accTit.on').outerHeight();
            if(!openLi.length){
                openLi = itm;
            }
            if(isOpen){
                openedLi = openLi;
            }

            //opened list close
            openedLi.stop().animate({
                'height': closeHeight,
            }, {
                duration: 250,
                ease: 'easeOutExpo',
                complete: function() {
                    openedLi.find('.accTit').removeClass('on');
                    openedLi.find('.accTit button').attr('aria-expanded', false);
                }
            })
            
            if(isOpen){
                return;
            }
            
            openLi.stop().animate({
                'height' : liHeight
            },{
              duration:250,
              ease: 'easeOutExpo',
              complete: function(){
                liTit.addClass('on');
                t.attr('aria-selected', true);
                t.attr('aria-expanded', true);
              }  
            })
            
        })
    })
}

//공통 가운데정렬 셀렉박스 
commonJs.initSorting = function(el){
    el.each(function(idx, i){
        var itm = $(i);
        var lab = itm.find('label');

        itm.find('select').change(function(){
            var selectedName = $(this).children('option:selected').text();
            lab.text(selectedName);
        })
    })
}

//공통 액티브인풋
commonJs.initActiveInput = function(el){
    if(!el.length){
        return;
    }

    el.each(function(idx, i){
        var itm = $(i);
        var input = itm.find('input');

        itm.find('label').css(cssScript.actionInput);
    
        itm.find('input').focus(function() {
            $(this).parent('.activeInput').addClass('action');
        });
        
        // input 삭제 클릭시
        itm.find('button').click(function() {
            event.stopPropagation();
            input.attr('value', '').val('');
            input.focus();
            itm.addClass("action");
        });
        
        // input 빠져 나올시
        itm.find('input').focusout(function() {
            if($(this).val().length < 1){
                itm.removeClass("action");
            }		
        });
    })
}

/*
    공통 토글탭
    .tabScript 클래스가 붙어있어야만 스크립트 동작하도록 작성. 

*/

commonJs.initTabToggle = function(el){
    if(!el.length){
        return;
    }

    el.each(function(idx, i){
        var itm= $(i);
        
        var contList =[];
        itm.nextUntil('.tabTog.tabScript').each(function(){
            if($(this).hasClass('tabcon')){
                contList.push($(this));
            }
        })
        var selected;

        itm.find('ul>li>a').each(function(){
            if($(this).attr('aria-selected') == 'true'){
                selected = $('#'+$(this).attr('aria-controls'));
            }
        })
        hide(contList);
        selected.show();
        
        itm.find('ul>li').on('click', function(){
            var t = $(this);
            
            t.siblings('li').find('a').attr('aria-selected' , false);
            t.find('a').attr('aria-selected' , true);
            
            hide(contList);
            $('#'+t.find('a').attr('aria-controls')).show();
        })
    
    })

    function hide(list){
        for(i in list){
            list[i].hide();
        }
    }
}

var cssScript = {
    actionInput: {
        'transition': 'all 0.5s',
        '-webkit-transition': 'all 0.5s',
        '-moz-transition': 'all 0.5s',
        '-ms-transition': 'all 0.5s',
        '-o-transition': 'all 0.5s',
    },
}

})(window, jQuery)